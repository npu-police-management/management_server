# This is a basic workflow to help you get started with Actions

name: docker CI/CD

# Controls when the workflow will run
on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out
        uses: actions/checkout@v3
        
      - name: Set up JDK:17
        uses: actions/setup-java@v1
        with: 
          java-version: 17
          
      - name: Build with Maven
        run: mvn -DskipTests -B package --file pom.xml
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Set up Docker build
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/police-management:latest
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 初始化ssh并执行sh启动镜像
        run: |
          eval $(ssh-agent -s)
          echo "${{secrets.SERVER_SSH_PRIV_KEY}}" > deploy.key
          mkdir -p ~/.ssh
          chmod 0600 deploy.key
          ssh-add deploy.key
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          ssh root@${{secrets.SERVER_IP}} "cd /root/dachuang && sh deploy.sh"
    # 在build结束后才会运行deploy
    needs: build
